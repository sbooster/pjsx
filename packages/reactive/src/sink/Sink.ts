import Subscriber from "@/pubsub/Subscriber";

/**
 * Интерфейс Sink<T> описывает источник данных, поддерживающий операции по отправке значений,
 * ошибок, а также управление подписчиками.
 */
export default interface Sink<T> {
    /**
     * Отправляет следующее значение подписчикам.
     *
     * @param value Значение, которое будет отправлено подписчикам.
     */
    emitNext(value: T): void;

    /**
     * Отправляет ошибку подписчикам.
     *
     * @param error Ошибка, которая будет отправлена подписчикам.
     */
    emitError(error: Error): void;

    /**
     * Завершает поток данных, уведомляя подписчиков.
     * После вызова этого метода ни одно новое значение или ошибка не будут отправлены.
     */
    emitComplete(): void;

    /**
     * Добавляет подписчика, который будет получать данные, ошибки или уведомления о завершении.
     *
     * @param subscriber Подписчик, реализующий интерфейс Subscriber<T>.
     */
    addSubscriber(subscriber: Subscriber<T>): void;

    /**
     * Удаляет подписчика. Необязательно для всех реализаций, но предусмотрено интерфейсом.
     *
     * @param subscriber Подписчик, который должен быть удалён.
     */
    removeSubscriber(subscriber: Subscriber<T>): void;
}