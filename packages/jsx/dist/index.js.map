{"version":3,"sources":["../src/index.ts","../src/component/index.ts","../src/jsx/index.ts"],"sourcesContent":["/*\n *  Copyright (C) 2025 CKATEPTb\n *\n * This file is part of pjsx-boilerplate.\n *\n * pjsx-boilerplate is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * pjsx-boilerplate is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport * from '@/component'\nexport * from '@/jsx'\nexport type {JSX} from '@/jsx/jsx'\n\nexport * from '@pjsx/core'","/*\n *  Copyright (C) 2025 CKATEPTb\n *\n * This file is part of pjsx-boilerplate.\n *\n * pjsx-boilerplate is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * pjsx-boilerplate is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\n\nexport abstract class Component<P extends object = {}> {\n    public constructor(public readonly props: P = {} as P) {\n    }\n    public abstract render(): HTMLElement\n    public beforeMount?(): void\n    public onMount?(): void\n    public onUnmount?(): void\n}\n\nexport type FunctionalComponent<P extends object = {}> = (props?: P) => HTMLElement","/*\n *  Copyright (C) 2025 CKATEPTb\n *\n * This file is part of pjsx-boilerplate.\n *\n * pjsx-boilerplate is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * pjsx-boilerplate is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {Component} from \"@/component\";\nimport {lazyPeek, peek} from \"@pjsx/core\";\n\nfunction appendChild(parent: HTMLElement | DocumentFragment, child: any) {\n    if (child instanceof HTMLElement || child instanceof DocumentFragment) {\n        parent.appendChild(child);\n    } else if (Array.isArray(child)) {\n        child.forEach(c => appendChild(parent, c));\n    } else if (child != null && child !== false) {\n        parent.appendChild(document.createTextNode(String(child)));\n    }\n}\n\nfunction observeLifecycle(element: HTMLElement, component: Component) {\n    const parent = (component.props as any).__parent\n    lazyPeek<MutationObserver>(self => new MutationObserver((mutations) => {\n        mutations.forEach(({addedNodes, removedNodes}) => {\n            if (Array.from(addedNodes).includes(element)) component.onMount?.();\n            if (Array.from(removedNodes).includes(element)) {\n                component.onUnmount?.();\n                self().disconnect();\n            }\n        });\n    })).peek(val => val.observe(parent || document.body, {childList: true, subtree: true}))\n}\n\ntype Constructor = new (props?: any) => Component\ntype Tag = undefined | keyof HTMLElementTagNameMap | Constructor | Function\ntype Props = { __parent: HTMLElement, children?: HTMLElement[], ref: HTMLElement }\n\nfunction jsx(tag: Tag, props: Props): HTMLElement | DocumentFragment {\n    console.log('jsx:', tag, props)\n    const element = (function createElement(tag: Tag) {\n        const type = typeof tag\n        switch (type) {\n            case \"string\":\n                return lazyPeek(() => {\n                    try {\n                        return document.createElement(tag as string)\n                    } catch (e) {\n                        return document.createTextNode(tag as string)\n                    }\n                }).get()\n            case \"function\":\n                return peek(tag as Function).map(tag => {\n                    if (/^class\\s/.test(String(tag) || '')) {\n                        const component = new (tag as Constructor)(props);\n                        component.beforeMount?.()\n                        const element = component.render() as HTMLElement\n                        const children = props?.children || []\n                        const onMount = component.onMount\n                        component.onMount = () => {\n                            children.forEach(value => element.appendChild(value))\n                            onMount?.()\n                        }\n                        observeLifecycle(element, component)\n                        return element\n                    } else {\n                        return tag(props)\n                    }\n                }).get()\n            default: return jsx(String(tag) as Tag, props)\n        }\n    })(tag)\n    if (element instanceof HTMLElement) {\n        for (const [key, value] of Object.entries(props)) {\n            if (key == 'children') {\n                peek(value)\n                    .map(val => (Array.isArray(val) ? val : [val]).map(val => {\n                        if (val instanceof Node) return val\n                        return jsx(val, {} as unknown as Props)\n                    }))\n                    .get()\n                    .forEach(val => {\n                        if (val instanceof Node) {\n                            element.appendChild(val)\n                        }\n                    })\n            } else if (key.startsWith(\"on\") && typeof value === \"function\") {\n                element.addEventListener(key.slice(2).toLowerCase(), value);\n            } else if (key in element) {\n                (element as any)[key] = value\n            } else {\n                element.setAttribute(key, String(value));\n            }\n        }\n    }\n    return element as HTMLElement\n}\n\nfunction fragment(props: any): HTMLElement {\n    return jsx(document.createDocumentFragment, props) as HTMLElement;\n}\n\nexport {jsx, jsx as jsxs, jsx as jsxDEV, fragment as Fragment}"],"mappings":"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","names":["tag","element","val"]}